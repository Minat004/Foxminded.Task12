@using FinancialTime.Core.DTOs.FinOperation
@using FinancialTime.Core.DTOs.FinType

<div class="modal fade show"
     aria-modal="true" 
     role="dialog"
     @onclick="Close">
    <div class="modal-dialog" @onclick:stopPropagation="true">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add operation</h4>
                <button type="button" class="btn btn-outline-danger" @onclick="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label class="col-form-label">Date:</label>
                        <RadzenDatePicker class="w-100" @bind-Value="@_operationDate">
                            <FooterTemplate>
                                <RadzenButton Click="@(() => _operationDate = DateTime.Now)" Text="Today" class="my-3 w-100" />
                            </FooterTemplate>
                        </RadzenDatePicker>
                    </div>
                    <div class="form-group">
                        <label for="value" class="col-form-label">Value:</label>
                        <input type="text" class="form-control" id="value" @bind="_operationValue">
                    </div>
                    <div class="form-group">
                        <label for="category" class="col-form-label">Category:</label>
                        <select class="form-select" id="category" @bind="_selectedCategoryId">
                            @foreach (var category in Categories!)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="Submit">Add</button>
                <button type="button" class="btn btn-outline-primary" @onclick="Close">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback<FinOperationAddDto> OnSubmit { get; set; }

    [Parameter]
    public IEnumerable<FinTypeDto>? Categories { get; set; }

    private int _selectedCategoryId;

    private DateTime _operationDate;

    private decimal _operationValue;

    protected override Task OnInitializedAsync()
    {
        _selectedCategoryId = Categories!.First().Id;
        
        _operationDate = DateTime.Now;
        
        return base.OnInitializedAsync();
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync(true);
    }

    private async Task Submit()
    {
        var finOperationAddDto = new FinOperationAddDto
        {
            Date = _operationDate,
            Value = _operationValue,
            FinTypeId = _selectedCategoryId
        };

        await OnSubmit.InvokeAsync(finOperationAddDto);
    }
}