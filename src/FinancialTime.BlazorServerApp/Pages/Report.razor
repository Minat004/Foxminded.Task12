@page "/report"
@using FinancialTime.BlazorServerApp.Interfaces
@using FinancialTime.Core.DTOs.Report
@using FinancialTime.Core.Enums
@inject IReportClient Client

<div class="container mb-3">
    <div class="row">
        <div class="col-md-auto">
            <h3>Report</h3>
        </div>
        <div class="col-md-auto">
            <button type="button" class="btn btn-primary" @onclick="ShowReport">Get</button>
        </div>
    </div>
</div>

<form>
    <div class="row mb-3">
        <label for="report-type" class="col-auto col-form-label">For:</label>
        <div class="col-auto">
            <select class="form-select" id="report-type" @bind="_selectedReportType">
                @foreach (var reportType in _reportTypes!)
                {
                    <option>@reportType</option>
                }
            </select>
        </div>
        @if (_selectedReportType == EReport.Date)
        {
            <div class="col-auto">
                <RadzenDatePicker @bind-Value="@_date">
                    <FooterTemplate>
                        <RadzenButton Click="@(() => _date = DateTime.Now)" Text="Today" class="my-3 w-100"/>
                    </FooterTemplate>
                </RadzenDatePicker>
            </div>
        }
        @if (_selectedReportType == EReport.Period)
        {
            <label class="col-auto col-form-label">From:</label>
            <div class="col-auto">
                <RadzenDatePicker @bind-Value="@_startDate">
                    <FooterTemplate>
                        <RadzenButton Click="@(() => _startDate = DateTime.Now)" Text="Today" class="my-3 w-100"/>
                    </FooterTemplate>
                </RadzenDatePicker>
            </div>
            <label class="col-auto col-form-label">To:</label>
            <div class="col-auto">
                <RadzenDatePicker @bind-Value="@_endDate">
                    <FooterTemplate>
                        <RadzenButton Click="@(() => _endDate = DateTime.Now)" Text="Today" class="my-3 w-100"/>
                    </FooterTemplate>
                </RadzenDatePicker>
            </div>
        }
    </div>
</form>

@if (_isShowDateReport)
{
    if (_reportDateDto is null)
    {
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                 role="progressbar" 
                 aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
        </div>
    }
    else
    {
        <div class="row">
            <label class="col-md-auto">Income:</label>
            <span class="col-auto">@_reportDateDto.ResultIncome</span>
            <label class="col-md-auto">Expense:</label>
            <span class="col-auto">@_reportDateDto.ResultExpense</span>
        </div>
    
        <table class="table">
            <thead>
            <tr>
                <th>Number</th>
                <th>Date</th>
                <th>Value</th>
                <th>Category</th>
                <th>Budget</th>
            </tr>
            </thead>
            <tbody>
            @{
                var num = 0;
            }
            @foreach (var operationDto in _reportDateDto.Operations!)
            {
                num++;
                <tr>
                    <td>@num</td>
                    <td>@operationDto.Date</td>
                    <td>@operationDto.Value</td>
                    <td>@operationDto.FinTypeName</td>
                    <td>@operationDto.FinTypeBudget</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@if (_isShowPeriodReport)
{
    if (_reportPeriodDto is null)
    {
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                 role="progressbar" 
                 aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
        </div>
    }
    else
    {
        <div class="row">
            <label class="col-md-auto">Income:</label>
            <span class="col-auto">@_reportPeriodDto.ResultIncome</span>
            <label class="col-md-auto">Expense:</label>
            <span class="col-auto">@_reportPeriodDto.ResultExpense</span>
        </div>
    
        <table class="table">
            <thead>
            <tr>
                <th>Number</th>
                <th>Date</th>
                <th>Value</th>
                <th>Category</th>
                <th>Budget</th>
            </tr>
            </thead>
            <tbody>
            @{
                var num = 0;
            }
            @foreach (var operationDto in _reportPeriodDto.Operations!)
            {
                num++;
                <tr>
                    <td>@num</td>
                    <td>@operationDto.Date</td>
                    <td>@operationDto.Value</td>
                    <td>@operationDto.FinTypeName</td>
                    <td>@operationDto.FinTypeBudget</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@code {
    private IEnumerable<EReport>? _reportTypes;

    private EReport _selectedReportType;

    private DateTime _date;
    
    private DateTime _startDate;
    
    private DateTime _endDate;

    private ReportDateDto? _reportDateDto;

    private ReportPeriodDto? _reportPeriodDto;

    private bool _isShowDateReport;
    
    private bool _isShowPeriodReport;
    
    protected override async Task OnInitializedAsync()
    {
        _reportTypes = Enum.GetValues<EReport>();
        _selectedReportType = _reportTypes.First();
        
        _date = DateTime.Now;
        _startDate = DateTime.Now;
        _endDate = DateTime.Now;

        await Task.CompletedTask;
    }

    private async Task ShowReport()
    {
        if (_selectedReportType == EReport.Date)
        {
            _isShowDateReport = true;
            _isShowPeriodReport = false;
            _reportDateDto = await Client.GetDateReportAsync(_date);
            return;
        }
        
        _isShowDateReport = false;
        _isShowPeriodReport = true;
        _reportPeriodDto = await Client.GetPeriodReportAsync(_startDate, _endDate);
    }
}